import { GraphQLSchema } from 'graphql';
import { GetMeshSourcePayload, MeshHandler, MeshHandlerOptions, MeshSource, YamlConfig } from '@graphql-mesh/types';
export default class OpenAPIHandler implements MeshHandler {
    private name;
    private config;
    private schemaWithAnnotationsProxy;
    private bundleProxy;
    private baseDir;
    private logger;
    private fetchFn;
    private pubsub;
    private importFn;
    constructor({ name, config, baseDir, store, pubsub, logger, importFn, }: MeshHandlerOptions<YamlConfig.OpenapiHandler>);
    getNonExecutableSchema({ interpolatedSource }: {
        interpolatedSource: string;
    }): Promise<GraphQLSchema>;
    getMeshSource({ fetchFn }: GetMeshSourcePayload): Promise<MeshSource>;
}
